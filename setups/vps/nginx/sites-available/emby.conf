# Map HTTPS and HTTP schemes to set the HSTS header dynamically:
# - If the request uses HTTPS, set a Strict-Transport-Security header to enforce HTTPS for future requests.
# - If the request uses HTTP, leave the header empty to avoid sending HSTS on insecure connections.
map $scheme $hsts_header {
    https "max-age=63072000; includeSubDomains; preload";
    http  "";
}


# Determine the real client IP when using Cloudflare's CF-Connecting-IP header
map $http_cf_connecting_ip $real_ip { # detection if using cloudflare
    ""        $remote_addr;
    default   $http_cf_connecting_ip;
}

# Log format using the real client IP instead of Cloudflare's proxy IP 
# (requires cloudflare-realip.conf with set_real_ip_from)
log_format emby  '$real_ip - $remote_user [$time_local] "$request" '
				  '$status $body_bytes_sent "$http_referer" '
				  '"$http_user_agent" "$http_x_forwarded_for" $request_time $server_port';

log_format default '$real_ip - $remote_user [$time_local] "$request" '
				  '$status $body_bytes_sent "$http_referer" '
				  '"$http_user_agent" "$http_x_forwarded_for" $request_time $server_port';

server {
	listen 80;
	listen [::]:80;
	server_name emby.example.com;

	include snippets/dns-rebind-block.conf;         # Protect against DNS rebinding attacks
	include snippets/cloudflare-realip.conf;        # Configure trusted Cloudflare IPs

	return 301 https://$server_name$request_uri;    # Redirect HTTP to HTTPS
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name emby.example.com;

	include snippets/dns-rebind-block.conf;         # Protect against DNS rebinding attacks
	include snippets/cloudflare-realip.conf;        # Configure trusted Cloudflare IPs

	ssl_certificate     /etc/letsencrypt/live/emby.example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/emby.example.com/privkey.pem;

	# Secure SSL configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384";
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 1h;
	
	resolver 1.1.1.1 1.0.0.1 valid=300s;            # Set DNS resolver with short TTL
	resolver_timeout 5s;

	add_header Strict-Transport-Security $hsts_header always;   # Enforce HSTS for HTTPS connections
	include snippets/common-headers.conf;                       # Security headers
	
	client_max_body_size 1000M;                     # Limit request body size
	access_log /var/log/nginx/emby_access.log emby;
	error_log  /var/log/nginx/emby_error.log warn;

	# Disable Swagger API documentation for security
	location ^~ /swagger {
		return 404;
	}

	# Applies ONLY to the specific path for emby authentication
	location /emby/Users/authenticatebyname {
		proxy_pass http://10.10.20.20:8096;
		
		# If the backend returns 401 or 403, redirect to internal @force401 location
		proxy_intercept_errors on;                  # Enable error interception for custom error handling
		error_page 403 = @force401;                 # Map 403 errors to custom 401 handler (e.g., admin account not allowed for remote access)
		error_page 401 = @force401;                 # Ensures consistent handling for real 401 errors

		proxy_set_header Host $host;                # Passes the requested domain name to the backend server.
		
		proxy_set_header X-Real-IP $real_ip;        # Passes the real client IP to the backend server.
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   # Add client IP to X-Forwarded-For chain 
		proxy_set_header X-Forwarded-Proto $scheme; # Pass original protocol (http/https)
		
		proxy_hide_header X-Powered-By;             # Hide backend software version
		
	}

	# Main reverse proxy
	location / {
		proxy_pass http://10.10.20.20:8096;
		proxy_buffering off;                        # Stream responses immediately without buffering

		proxy_set_header Host $host;                # Passes the requested domain name to the backend server.
		proxy_set_header Range $http_range;         # Allows specific chunks of a file to be requested.
		proxy_set_header If-Range $http_if_range;   # Allows specific chunks of a file to be requested.
		
		proxy_set_header X-Real-IP $real_ip;        # Passes the real client IP to the backend server.
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;	# Add client IP to X-Forwarded-For chain 
		proxy_set_header X-Forwarded-Proto $scheme; # Pass original protocol (http/https)
		
		proxy_hide_header X-Powered-By;             # Hide backend software version
		
		# WebSocket support: required for two-way real-time communication between Emby and the client
		proxy_http_version 1.1;                     # Required for WebSocket or keep-alive support
		proxy_set_header Upgrade $http_upgrade;     # Support WebSocket upgrades
		proxy_set_header Connection $http_connection; # Maintain correct connection header for upgraded protocols
	}

	# Internal location used for custom 401 responses (e.g., invalid credentials or denied remote access)
	location @force401 {
		default_type text/html;

		# These headers mimic Emby's original responses to ensure compatibility with Emby clients
		add_header Access-Control-Allow-Credentials 'true' always;
		add_header Access-Control-Allow-Headers 'Accept, Accept-Language, Authorization, Cache-Control, Content-Disposition, Content-Encoding, Content-Language, Content-Length, Content-MD5, Content-Range, Content-Type, Date, Host, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, Origin, OriginToken, Pragma, Range, Slug, Transfer-Encoding, Want-Digest, X-MediaBrowser-Token, X-Emby-Token, X-Emby-Client, X-Emby-Client-Version, X-Emby-Device-Id, X-Emby-Device-Name, X-Emby-Authorization'  always;
		add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, PATCH, OPTIONS'  always;
		add_header Access-Control-Allow-Origin https://$host always;
		add_header Access-Control-Allow-Private-Network true always;
		add_header Cross-Origin-Resource-Policy cross-origin always;
		add_header Strict-Transport-Security $hsts_header always;
		
		include snippets/common-headers.conf;       # Security headers

		return 401 "Falscher Benutzername oder Passwort. Bitte versuche es noch einmal.";
	}
}
